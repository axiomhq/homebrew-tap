# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AxiomHoneycombProxy < Formula
  desc "Honeycomb compatible log forwarding and multiplexing proxy for Axiom"
  homepage "https://axiom.co"
  version "0.8.1"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/axiomhq/axiom-honeycomb-proxy/releases/download/v0.8.1/axiom-honeycomb-proxy_0.8.1_darwin_amd64.tar.gz"
      sha256 "b2a2eecae4aaf85a1be77d5876c84c882a590ba8b322db4c1a97a784e98c3da4"

      def install
        bin.install "axiom-honeycomb-proxy"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/axiomhq/axiom-honeycomb-proxy/releases/download/v0.8.1/axiom-honeycomb-proxy_0.8.1_darwin_arm64.tar.gz"
      sha256 "9bf97ea4be4951a3c742ec931fe2ea33453014c4472deb723551c504c0a29355"

      def install
        bin.install "axiom-honeycomb-proxy"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/axiomhq/axiom-honeycomb-proxy/releases/download/v0.8.1/axiom-honeycomb-proxy_0.8.1_linux_amd64.tar.gz"
        sha256 "c5824d4cdbb73dcf45bf76e51d66eeacdea59acf04c3d9edcd5c34ad6847dfda"

        def install
          bin.install "axiom-honeycomb-proxy"
        end
      end
    end
    if Hardware::CPU.arm?
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/axiomhq/axiom-honeycomb-proxy/releases/download/v0.8.1/axiom-honeycomb-proxy_0.8.1_linux_armv6.tar.gz"
        sha256 "e505317a9191cbc34c8bdfc9a621bfb6d3721e76e390a1735f32088567db5ea6"

        def install
          bin.install "axiom-honeycomb-proxy"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/axiomhq/axiom-honeycomb-proxy/releases/download/v0.8.1/axiom-honeycomb-proxy_0.8.1_linux_arm64.tar.gz"
        sha256 "15decede2fc4b14a84dddd76c8ebee1f34a932df4af6aaeaa20fc88bb69711af"

        def install
          bin.install "axiom-honeycomb-proxy"
        end
      end
    end
  end

  test do
    assert_match "x", "x"
  end
end
